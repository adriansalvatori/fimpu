(function () {
	'use strict';

	// This file is generated by Sapper â€” do not edit it!
	const timestamp = 1606357110138;

	const files = [
		"service-worker-index.html",
		"13-stand.jpg",
		"FIMPU2019_1.jpg",
		"FIMPU2019_10.jpg",
		"FIMPU2019_11.jpg",
		"FIMPU2019_12.jpg",
		"FIMPU2019_2.jpg",
		"FIMPU2019_3.jpg",
		"FIMPU2019_4.jpg",
		"FIMPU2019_5.jpg",
		"FIMPU2019_6.jpg",
		"FIMPU2019_7.jpg",
		"FIMPU2019_8.jpg",
		"FIMPU2019_9.jpg",
		"arrow-left-circle.svg",
		"arrow-right-circle.svg",
		"button-shadow.png",
		"canal-13-1.jpg",
		"canal-13-2.jpg",
		"canal-13.pdf",
		"canal-capital-gallery-1.jpg",
		"canal-capital-gallery-2.jpg",
		"canal-capital-gallery-3.jpg",
		"canal-capital-gallery-4.jpg",
		"canal-capital-stand.jpg",
		"canal-capital.pdf",
		"decoration.svg",
		"favicon.png",
		"fimpu-sala.svg",
		"global.css",
		"lobby-stands.jpg",
		"lobby.jpg",
		"logo-192.png",
		"logo-512.png",
		"logo-header.svg",
		"logo-salas.svg",
		"logo.svg",
		"manifest.json",
		"membrete.svg",
		"menu.png",
		"mintic-gallery-2.jpg",
		"mintic-gallery-3.jpg",
		"mintic-gallery-4.jpg",
		"mintic-gallery-5.jpg",
		"mintic-stand.jpg",
		"pedestal.png",
		"play.svg",
		"rtvc-gallery-1.jpg",
		"rtvc-gallery-10.jpg",
		"rtvc-gallery-11.jpg",
		"rtvc-gallery-12.jpeg",
		"rtvc-gallery-13.JPG",
		"rtvc-gallery-13.jpg",
		"rtvc-gallery-16.jpg",
		"rtvc-gallery-17.jpg",
		"rtvc-gallery-2.JPG",
		"rtvc-gallery-2.jpg",
		"rtvc-gallery-3.jpg",
		"rtvc-gallery-4.jpg",
		"rtvc-gallery-5.JPG",
		"rtvc-gallery-5.jpg",
		"rtvc-gallery-6.jpg",
		"rtvc-gallery-7.jpg",
		"rtvc-gallery-8.jpg",
		"rtvc-gallery-9.jpg",
		"rtvc-stand.jpg",
		"rtvcSTAND.pdf",
		"screen.png",
		"successkid.jpg",
		"telecaribe-1.jpg",
		"telecaribe-2.jpg",
		"telecaribe-3.jpg",
		"telecaribe-4.jpg",
		"telecaribe-stand.jpg",
		"teleislas-1.jpg",
		"teleislas-2.jpg",
		"teleislas-3.jpg",
		"teleislas-4.jpg",
		"teleislas-stand.jpg",
		"teleislas.pdf",
		"tro-1.JPG",
		"tro-2.JPG",
		"tro-3.JPG",
		"tro-4.JPG",
		"tro-stand.jpg"
	];

	const shell = [
		"client/client.e3e3f15a.js",
		"client/index.99735210.js",
		"client/memorias.73ce367e.js",
		"client/Agenda.ecd624d8.js",
		"client/SlideShow.8fd22623.js",
		"client/index.b053da11.js",
		"client/[slug].6fb7426d.js",
		"client/Input.473b8ba2.js",
		"client/about.d7d60290.js",
		"client/index.ef5e9af3.js",
		"client/index.68526bde.js",
		"client/index.9da7e379.js",
		"client/[slug].da73c4fa.js",
		"client/index.40dd6791.js",
		"client/[slug].324850ff.js",
		"client/Iframe.865c83fb.js",
		"client/player.es.9cbbac8a.js",
		"client/lobby.846a9983.js",
		"client/index.db641486.js",
		"client/lideres.715dbd73.js",
		"client/[slug].78bd81bf.js",
		"client/sapper-dev-client.89e34bae.js",
		"client/tiny-slider.bd92118a.js"
	];

	const ASSETS = `cache${timestamp}`;

	// `shell` is an array of all the files generated by the bundler,
	// `files` is an array of everything in the `static` directory
	const to_cache = shell.concat(files);
	const cached = new Set(to_cache);

	self.addEventListener('install', event => {
		event.waitUntil(
			caches
				.open(ASSETS)
				.then(cache => cache.addAll(to_cache))
				.then(() => {
					self.skipWaiting();
				})
		);
	});

	self.addEventListener('activate', event => {
		event.waitUntil(
			caches.keys().then(async keys => {
				// delete old caches
				for (const key of keys) {
					if (key !== ASSETS) await caches.delete(key);
				}

				self.clients.claim();
			})
		);
	});

	self.addEventListener('fetch', event => {
		if (event.request.method !== 'GET' || event.request.headers.has('range')) return;

		const url = new URL(event.request.url);

		// don't try to handle e.g. data: URIs
		if (!url.protocol.startsWith('http')) return;

		// ignore dev server requests
		if (url.hostname === self.location.hostname && url.port !== self.location.port) return;

		// always serve static files and bundler-generated assets from cache
		if (url.host === self.location.host && cached.has(url.pathname)) {
			event.respondWith(caches.match(event.request));
			return;
		}

		// for pages, you might want to serve a shell `service-worker-index.html` file,
		// which Sapper has generated for you. It's not right for every
		// app, but if it's right for yours then uncomment this section
		/*
		if (url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {
			event.respondWith(caches.match('/service-worker-index.html'));
			return;
		}
		*/

		if (event.request.cache === 'only-if-cached') return;

		// for everything else, try the network first, falling back to
		// cache if the user is offline. (If the pages never change, you
		// might prefer a cache-first approach to a network-first one.)
		event.respondWith(
			caches
				.open(`offline${timestamp}`)
				.then(async cache => {
					try {
						const response = await fetch(event.request);
						cache.put(event.request, response.clone());
						return response;
					} catch(err) {
						const response = await cache.match(event.request);
						if (response) return response;

						throw err;
					}
				})
		);
	});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
