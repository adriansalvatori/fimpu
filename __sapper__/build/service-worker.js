!function(){"use strict";const e=["client/index.3eccd4d7.js","client/index.577e43a8.js","client/[slug].8f2b2a9a.js","client/index.de41fdff.js","client/index.c6a8b7c1.js","client/about.20d0897f.js","client/index.2a42ea06.js","client/index.6a22129d.js","client/[slug].5b796da5.js","client/index.e4acd2c3.js","client/lobby.c6b447b1.js","client/[slug].fbf1905a.js","client/[slug].382f25ad.js","client/Agenda.a26b7ead.js","client/tiny-slider.bd92118a.js","client/client.9f896563.js","client/Input.4448e4bd.js"].concat(["service-worker-index.html","13-stand.jpg","button-shadow.png","canal-capital-stand.jpg","decoration.svg","favicon.png","fimpu-sala.svg","global.css","lobby-stands.jpg","lobby.jpg","logo-192.png","logo-512.png","logo-header.svg","logo-salas.svg","logo.svg","manifest.json","membrete.svg","menu.png","mintic-stand.jpg","pedestal.png","play.svg","rtvc-gallery-1.jpg","rtvc-gallery-10.jpg","rtvc-gallery-11.jpg","rtvc-gallery-12.jpeg","rtvc-gallery-13.JPG","rtvc-gallery-16.jpg","rtvc-gallery-17.jpg","rtvc-gallery-2.JPG","rtvc-gallery-3.jpg","rtvc-gallery-4.jpg","rtvc-gallery-5.JPG","rtvc-gallery-6.jpg","rtvc-gallery-7.jpg","rtvc-gallery-8.jpg","rtvc-gallery-9.jpg","rtvc-stand.jpg","screen.png","successkid.jpg","telecaribe-stand.jpg","teleislas-stand.jpg","teleislas.pdf","tro-stand.jpg"]),t=new Set(e);self.addEventListener("install",t=>{t.waitUntil(caches.open("cache1606233125184").then(t=>t.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const t of e)"cache1606233125184"!==t&&await caches.delete(t);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const s=new URL(e.request.url);s.protocol.startsWith("http")&&(s.hostname===self.location.hostname&&s.port!==self.location.port||(s.host===self.location.host&&t.has(s.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1606233125184").then(async t=>{try{const s=await fetch(e.request);return t.put(e.request,s.clone()),s}catch(s){const a=await t.match(e.request);if(a)return a;throw s}}))))})}();
